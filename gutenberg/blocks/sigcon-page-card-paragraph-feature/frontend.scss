$w: var(--backgroundColor);
$elastic: cubic-bezier(0.175, 0.885, 0.32, 1.275);
$expo: cubic-bezier(1, 0.885, 0.32, 1);

@mixin magic-border($width, $color, $duration, $direction) {
  position: absolute;
  &:after {
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    z-index: -1;
    background: linear-gradient(to bottom, var(--primaryColor) 50%, var(--secondaryShade5) 50%) 50% 100% / 100% 200%
      no-repeat;
    left: 0;
    top: 0;
    transform: scaleY(0);
    transform-origin: bottom;
    transition: transform $duration ease-in-out,
      background-position $duration ease-in-out;
    transition-delay: $duration * 2.5, $duration * 3;
  }
  &:before {
    content: "";
    position: absolute;
    width: calc(100% + #{$width * 2});
    height: calc(100% + #{$width * 2});
    top: calc(#{$width}/ -1);
    left: calc(#{$width}/ -1);
    background: linear-gradient(to right, $color 0%, $color 100%),
      linear-gradient(to top, $color 50%, transparent 50%),
      linear-gradient(to top, $color 50%, transparent 50%),
      linear-gradient(to right, $color 0%, $color 100%),
      linear-gradient(to left, $color 0%, $color 100%);
    background-size: 100% $width, $width 200%, $width 200%, 0% $width, 0% $width;
    background-position: 50% 100%, 0% 0%, 100% 0%, 100% 0%, 0% 0%;
    background-repeat: no-repeat, no-repeat;
    transition: transform $duration ease-in-out,
      background-position $duration ease-in-out,
      background-size $duration ease-in-out, box-shadow $duration ease-in-out;
    transform: scaleX(0) rotate(180deg * $direction);
    transition-delay: $duration * 2, $duration, 0s, $duration * 3;
  }
  &:hover {
    &:after {
      transform: scaleY(1);
      transform-origin: top;
      background-position: 50% 0%;
    }
    &:before {
      background-size: 200% $width, $width 400%, $width 400%, 55% $width,
        55% $width;
      background-position: 50% 100%, 0% 100%, 100% 100%, 100% 0%, 0% 0%;
      transform: scaleX(1) rotate(180deg * $direction);
      transition-delay: 0s, $duration, $duration * 2;
    }
  }
}

body {
  scroll-behavior: smooth;
  background: var(--backgroundColor);
  font-family: "Poppins", sans-serif;
  transition-delay: 2s;
  max-width: 100vw;
  box-sizing: border-box;

  &.loaded {
    pointer-events: all;
    
    .feature-card-container {
      transform: translateX(0%);
      background: var(--backgroundColor);

      .panel {
        opacity: 1;
        transition-delay: 1.75s;
        &:before {
          opacity: 0.15;
          transition-delay: 2.5s;
        }
      }
    }
  }
  &.loaded::-webkit-scrollbar {
    background: var(--secondaryShade5);
    width: 5px;
  }
  &::-webkit-scrollbar {
    background: var(--primaryColor);
    width: 5px;
  }
  &::-webkit-scrollbar-thumb {
    background: var(--primaryColor);
  }
  &.active {
    cursor: auto;
    overflow: hidden;

    .feature-card-container {
      transform: translateX(-125vw);
      transition-delay: 0s;

      .panel h2 span.word:before {
        transform: translate(-50%, 100px);
        transition: 0s ease-in-out;
        transition-delay: 0s;
      }
    }
  }

  .feature-card-container {
    display: block;
    transition: 0.5s $expo;
    transform: translateX(0%);
    transition-delay: 0.75s;
    transform-style: preserve-3d;
    backface-visibility: hidden;
    will-change: transform;
    overflow: hidden;
    position: relative;
    box-sizing: border-box;
    width: calc(48vw + 280px);
    height: 100%;
		margin: 0 auto 15vh auto;

    @media screen and (max-width: 580px) {
      width: 100%;
    }
    
    .panel {
      --progress: 0;
      position: relative;
      width: 100%;
      height: 100%;
      padding: 20px;
      box-sizing: border-box;
      transition: 1s $expo;
      transform-style: preserve-3d;
      backface-visibility: hidden;
      opacity: 1;
      @media screen and (max-width: 480px) {
        padding: 5px;
      }
      
      &:nth-of-type(even) {
        .thumb {
          &:after {
            transform: scaleX(-1);
            left: 50%;
          }
        }
      }
      
      &:last-of-type {
        margin-bottom: 0;
        .thumb {
          &:after {
            display: none;
          }
        }
        
        &:nth-of-type(even) {
          &:before {
            right: -5%;
          }
        }
      }
      
      &:before {
        font-family: "Poppins";
        font-size: 400px;
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        width: 40%;
        display: flex;
        left: 0;
        justify-content: flex-start;
        align-items: center;
        color: var(--backgroundColor);
        -webkit-text-stroke: 2px var(--secondaryShade5);
        line-height: 1;
        opacity: 0.1;
        transition: 1.75s ease-in-out;
      }
      &> a {
        position: relative;
        z-index: 1;
        grid-area: 3 / 1 / 4 / 4;
        text-decoration: none;

        h2 {
          font-size: inherit;
          position: relative;
          z-index: 3;
          color: transparent;
          line-height: 1;
          pointer-events: none;
          transform: translateY(calc(100px - (var(--progress) * 200px)));
          
          span.word {
            position: relative;
            display: inline-block;
            overflow: hidden;
            color: transparent;
            background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='200%25' height='100%25'%3E%3Cdefs%3E%3Cstyle%3E .wave%7B animation:wave 1s ease-in-out infinite alternate; animation-delay:-0.25s; stroke:%23f1b211; stroke-width:2; stroke-linecap:square; %7D @keyframes wave%7B to%7B d:path('M 0 40 Q 20 42.5 40 40 Q 60 37.5 80 40'); %7D %7D %3C/style%3E%3C/defs%3E%3Cpattern id='wavePattern' x='0' y='0' width='80' height='80' patternUnits='userSpaceOnUse'%3E%3Cpath fill='none' class='wave' d='M 0 40 Q 20 37.5 40 40 Q 60 42.5 80 40' /%3E%3C/pattern%3E%3Crect x='0' y='0' width='100%25' height='100%25' fill='url(%23wavePattern)'%3E%3C/rect%3E%3C/svg%3E")
              0px 65px / 80px 80px repeat-x;
            padding: 20px 0;
            margin: -20px 0;
            animation: waving 3s linear infinite;
            @media (max-width: 1000px) {
              padding: 40px 0px;
              margin: -40px 0;
            }
            @for $i from 1 through 6 {
              &:nth-of-type(#{$i}) {
                background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='200%25' height='100%25'%3E%3Cdefs%3E%3Cstyle%3E .wave%7B animation:wave 1s ease-in-out infinite alternate; animation-delay:#{$i * -0.25}s; stroke:%23f1b211; stroke-width:2; stroke-linecap:square; %7D @keyframes wave%7B to%7B d:path('M 0 40 Q 20 42.5 40 40 Q 60 37.5 80 40'); %7D %7D %3C/style%3E%3C/defs%3E%3Cpattern id='wavePattern' x='0' y='0' width='80' height='80' patternUnits='userSpaceOnUse'%3E%3Cpath fill='none' class='wave' d='M 0 40 Q 20 37.5 40 40 Q 60 42.5 80 40' /%3E%3C/pattern%3E%3Crect x='0' y='0' width='100%25' height='100%25' fill='url(%23wavePattern)'%3E%3C/rect%3E%3C/svg%3E")
                  0px
                  65px /
                  80px
                  80px
                  repeat-x;
              }
            }
            @keyframes waving {
              to {
                background-position: 200px 65px;
              }
            }
            @keyframes waving2 {
              to {
                background-position: 200px 0px;
              }
            }
            &:before {
              content: attr(data-word);
              position: absolute;
              top: 50%;
              left: 50%;
              transform: translate(-50%, -50%);
              color: transparent;
              -webkit-background-clip: text;
              -webkit-text-fill-color: transparent;
              background-image: linear-gradient(
                to bottom,
                transparent 25%,
                var(--primaryColor) 25%,
                var(--primaryColor) 75%,
                transparent 75%
              );
              background-size: 100% 250%;
              background-repeat: no-repeat;
              background-position: 50% calc((var(--progress) * 200px) - 150px);
              transition: transform 0.3s $elastic;
              transition-delay: 1.25s;
              -webkit-text-stroke: 2px var(--primaryColor);
            }
            &:nth-of-type(3n) {
              &:before {
                background-position: 50% calc((var(--progress) * -200px) + 25px);
              }
            }
          }
          @media (min-width: 1000px) {
            grid-area: 3 / 1 / 4 / 5;
            font-size: 82px;
            &:nth-of-type(2) {
              span.word {
                color: transparent;
                &:before,
                &:after {
                  color: transparent;
                }
              }
              z-index: 2;
            }
          }
        }
      }
      &:nth-of-type(even) {
        .thumb {
          &:before {
            left: -5%;
            top: -5%;
          }
          &:hover {
            &:before {
              transform: translate(5%, 5%);
            }
          }
        }
        h2 {
          text-align: right;
          grid-area: 3 / 3 / 4 / 6;

          @media (max-width: 768px) {
            grid-area: 2 / 1 / 5 / 6;
          }
          @media (min-width: 1000px) {
            grid-area: 3 / 2 / 4 / 6;
            clip-path: none;

            &:nth-of-type(2) {
              z-index: 4;
              clip-path: polygon(-5% -5%, 385px -5%, 385px 110%, -5% 110%);
              span.word {
                color: transparent;
                &:before,
                &:after {
                  color: transparent;
                }
              }
            }
          }
        }
        .thumb {
          position: relative;
          grid-area: 2 / 1 / 5 / 4;

          @media (max-width: 768px) {
            grid-area: 2 / 1 / 5 / 6;
          }
          p {
            top: -50px;
          }
        }
      }
      .thumb {
        position: relative;
        box-shadow: 0 0 0 2px var(--primaryColor);
        transition: box-shadow 0.3s ease-in-out;
        border-radius: 5px;
        * {
          border-radius: 5px;
        }
        .inner {
          position: relative;
          width: 100%;
          height: 100%;
          z-index: 0;
          padding: 1.5rem;
          @media screen and (max-width: 580px) {
            padding: 0.5rem;
          }

          &:before,
          &:after {
            content: "";
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            background: var(--secondaryShade5);
            mix-blend-mode: lighten;
            opacity: 0.5;
            z-index: 2;
          }
          &:after {
            background: var(--backgroundColor);
            opacity: 1;
            z-index: -2;
            mix-blend-mode: normal;
          }
          &> * {
            position: relative;
            z-index: 3; 
          }
        }
        &:before {
          content: "";
          position: absolute;
          width: 100%;
          height: 100%;
          left: 1%;
          top: 2%;
          box-shadow: 0 0 0 2px var(--secondaryShade5), 0 0 0 0 var(--backgroundColor), 0 0 0 0 var(--primaryColor);
          transition: transform 0.2s $expo, box-shadow 0.2s $expo;
          transition-delay: 0.2s, 0s;
          background: radial-gradient(
                circle at center,
                var(--secondaryShade5) 1px,
                rgba(255, 255, 255, 0.005) 1px,
                rgba(255, 255, 255, 0.005) 20px
              )
              0px 0px / 20px 20px,
            radial-gradient(
                circle at center,
                var(--secondaryShade5) 1px,
                rgba(255, 255, 255, 0.005) 1px,
                rgba(255, 255, 255, 0.005) 20px
              )
              10px 10px / 20px 20px;
          border-radius: 5px;
        }

        &:after {
          content: "";
          position: absolute;
          width: 50%;
          height: calc(100% + 25vh);
          left: 0%;
          top: 100%;
          border-style: dashed;
          border-width: 2px 2px 2px 2px;
          border-color: transparent var(--secondaryShade5) var(--secondaryShade5) transparent;
          border-radius: 0 0 10px 0;
          opacity: 0.25;
        }

      }
    }
  }
}
